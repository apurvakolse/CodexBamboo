


await test.step('Then verify all rows of DICOM header data are displayed', async () => {
  const dicomHeader = await gvstep.gv.gvCommon.locator(DICOM_HEADER_OPTION.dicom_header).first().textContent();

  // Filter only items that have both TAG Description and Value
  const validDicomItems = dicomInfo.filter(item => item['TAG Description'] && item['Value']);
  
  // Extract expected values in the order they appear
  const expectedValues = validDicomItems.map(item => item['Value']);

  // Make sure all expected values are defined
  expectedValues.forEach(value => {
    expect(value).toBeDefined();
  });

  if (dicomHeader) {
    const headerValues = dicomHeader.split('.').map(item =>
      item.replace(/-/g, '').trimStart().trim()
    );

    // Validate each value from header matches the corresponding expected value
    expectedValues.forEach((expected, index) => {
      const actual = headerValues[index];
      expect(actual).toEqual(expected);
    });
  }
});
