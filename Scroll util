import { Page } from '@playwright/test';

class ScrollUtils {
    private page: Page;

    constructor(page: Page) {
        this.page = page;
    }

    /**
     * Scrolls a given element using the mouse wheel.
     * @param selector - CSS/XPath selector of the element to scroll.
     * @param deltaY - Scroll amount (positive for down, negative for up).
     */
    async scrollUsingMouseWheel(selector: string, deltaY: number) {
        const element = await this.page.locator(selector);
        await element.hover();
        await this.page.mouse.wheel(0, deltaY);
        await this.page.waitForTimeout(500); // Wait for smooth scrolling effect
    }

    /**
     * Scrolls a given element using the scroll bar by dragging.
     * @param selector - CSS/XPath selector of the scrollable container.
     * @param startX - X coordinate to start the drag.
     * @param startY - Y coordinate to start the drag.
     * @param endY - Y coordinate to drag the scroll bar to.
     */
    async scrollUsingScrollbar(selector: string, startX: number, startY: number, endY: number) {
        const element = await this.page.locator(selector);
        const box = await element.boundingBox();

        if (box) {
            const { x, y } = box;
            await this.page.mouse.move(x + startX, y + startY);
            await this.page.mouse.down();
            await this.page.mouse.move(x + startX, y + endY);
            await this.page.mouse.up();
            await this.page.waitForTimeout(500); // Wait for scrolling effect
        } else {
            throw new Error(`Could not find element with selector: ${selector}`);
        }
    }
}

export default ScrollUtils;
